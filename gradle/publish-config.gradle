apply plugin: 'maven-publish'
apply plugin: 'signing'

signing {
    // TODO: Check this issue from time to time to use the commented instructions instead.
    // https://github.com/gradle/gradle/issues/11387
    //required { !isSnapshotVersion && project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword') }
    //sign publishing.publications
    def isSnapshotVersion = version.endsWith('SNAPSHOT')
    required { !isSnapshotVersion && project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword') }
    if (required) {
        //sign configurations.archives
        sign publishing.publications
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar

            customizePom(pom, project)
        }
    }
    repositories {
        maven {
            def isSnapshotVersion = version.endsWith('SNAPSHOT')
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = isSnapshotVersion ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username project.findProperty("ossrhUsername")
                password project.findProperty("ossrhPassword")
            }
        }
    }
}

def customizePom(pom, p) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == 'test'
        }

        // Add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            name p.hasProperty('moduleName') ? p.moduleName : p.name
            description p.hasProperty('moduleDescription') ? p.moduleDescription : p.description
            url 'https://github.com/jodconverter/jodconverter'
            organization {
                name 'JODConverter'
                url 'https://github.com/jodconverter'
            }
            scm {
                url 'https://github.com/jodconverter/jodconverter.git'
                connection 'scm:git:https://github.com/jodconverter/jodconverter.git'
                developerConnection 'scm:git:git@https://github.com/jodconverter/jodconverter.git'
            }
            developers {
                developer {
                    id 'sbraconnier'
                    name 'Simon Braconnier'
                    email 'simonbraconnier@gmail.com'
                    timezone  '-5'
                }
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/jodconverter/jodconverter/issues'
            }
            licenses {
                license {
                    name 'The Apache License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }
        }
    }
}
